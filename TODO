* Documentation
** Write a complete User Guide.
** Write a complete Developer Guide.
** Change donations message
** Inform users about memory footprint and tell them how to work around it
** Create FAQ
** Create forum items for my private list

* Testing
** REGRESSION

* Development

** Core

*** DependenciesLoader
**** In the dependenciesloader dialog, test internet connection before proposing installing Gems and Dlls.
**** Externalize the dependencies loader in a separate package
**** Use the dependencies loader to get main dependencies (rubyzip...)
**** DependenciesLoaderDialog: The tree should have a little context menu for setting the decisions to ignore/specify directory/install-><Different locations>
**** Implement a better looking ProgessDialog for DependenciesLoaderDialog
**** Optionally remember plugins that we want to ignore always (if not installed), and set a way in options to remove them from the forget list.

*** Main window
**** Find has to be integrated in the toolbar also.
**** Drop files on the main tree for URL shortcuts, files shortcuts
**** Drop text on the main tree for URL/Shell/Files Shortcuts
**** Click on the icon in the main tree should propose a quick combo to select alternative icons (with add at the bottom)
**** Scroll horizontal main tree while dragging on right and left edges and the horizontal scroll bar exists
**** Status bar displays last operation done
**** Accept Drop of Windows Shortcuts
**** Set recently opened files in the File menu
**** In the main tree, F2 should edit the label
**** Put in the main window Edit menu the ability to run a Shortcut
**** Sort Tags tree in the EditShortcut dialog

*** Other
**** Gather all errors during startup, and display them all once startup is finished.
**** ProgressBar during open/import/paste (in the common method)
**** External library directories have to be customizable in the options
**** Types config
**** Importing Icon indexes from EXE/DLL using Icon Indexes
**** ChooseIconDialog should look for web icons
**** ChooseIconDialog should look for directory icons
**** ChooseIconDialog should propose already used icons
**** ChooseIconDialog should give the possiblity to open icons from a website's favicon
**** Icons of Imports/Merge should have the same icons as Imports with a merge bitmap mask (do it for Open also)
**** Locale & Internationalization
**** Replace .Metadata['title'] with .getName
**** Set metadata for Tags too
**** Create a dedicated Metadata object that handles also serialization of Wx::Bitmaps... and remove serializeMap and unserializeMap
**** In options, provide a way to have automatic answers to dialogs asked during the delete command
**** See what must be committed for dependencies (mandatory and plugins)
**** Icon of installer should have a little package bitmap to differentiate it
**** Find a way for people to vote for their most important bugs to correct
**** Replace all extensions removal made with [0..-6] with File.extname(...).size
**** Replace TODOs in README file
**** Implement Send bug reports in BugReportDialog
**** Give ability to load several files on startup (Open & Merge behaviour)
**** Command line option loading options file
**** Find a way to not depend on a PBS locally installed Options file: USB keys can be read-only !
**** Command line options should load .pbss files by default, without -f flag. This way it works with Explorer.
**** Add an option in OptionsDialog to enable/disable startup tips

** Plugins
*** Create Windows/KDE programs shortcuts in start menu part of the additional plugin commands (this way, it is still possible to do it after a move of the program location)
*** Plugin for Opera
*** Create a tool that checks validity of Shortcuts (file exists or URL ok...)
*** Files Export plugin should create Windows Shortcuts for Shell types as well.
*** Plugin for Safari
*** Export plugins should log success or failure
*** When never saved, command Save should trigger SaveAs.
*** Give plugins mechanism for additional tools (commands)
*** Give the possibility to remove the main window (consider the main window as a plugin and give Tray the possibility to call it back ?)
*** XML export plugin: format output to be easily editable by hand
*** Should run non-executable commands with the associated program (use start)
*** Make a command that creates all relevant links to a SF.net project
*** Create a plugin that scans Shortcuts for redirections and update them (see the accessFile code for handling redirections, and also handle <meta http-equiv="Refresh"> Tag if the user wants it)
